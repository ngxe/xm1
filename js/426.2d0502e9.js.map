{"version":3,"file":"js/426.2d0502e9.js","mappings":"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","sources":["webpack://vue-shopping/./src/views/address/newAddress.vue","webpack://vue-shopping/src/views/address/newAddress.vue","webpack://vue-shopping/./src/views/address/newAddress.vue?7b29","webpack://vue-shopping/./src/views/address/newAddress.vue?0aea","webpack://vue-shopping/./src/api/address.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('van-nav-bar',{attrs:{\"fixed\":\"\",\"title\":_vm.$route.query.mode || '新增收货地址',\"left-arrow\":\"\"},on:{\"click-left\":function($event){return _vm.$router.go(-1)}}}),_c('div',{staticClass:\"content\"},[_c('br'),_c('van-address-edit',{attrs:{\"show-detail\":false,\"show-set-default\":_vm.isShowDefaultss,\"area-columns-placeholder\":['请选择', '请选择', '请选择'],\"addressInfo\":_vm.addressInfo,\"show-delete\":_vm.isDeleted,\"show-area\":false},on:{\"save\":_vm.onSave,\"delete\":_vm.onDelete},model:{value:(_vm.addressInfo),callback:function ($$v) {_vm.addressInfo=$$v},expression:\"addressInfo\"}},[[_c('van-field',{attrs:{\"required\":\"\",\"is-link\":\"\",\"readonly\":\"\",\"label\":\"地区\",\"placeholder\":\"请选择所在地区\"},on:{\"click\":function($event){_vm.show = true}},model:{value:(_vm.fieldValue),callback:function ($$v) {_vm.fieldValue=$$v},expression:\"fieldValue\"}}),_c('van-popup',{attrs:{\"round\":\"\",\"position\":\"bottom\"},model:{value:(_vm.show),callback:function ($$v) {_vm.show=$$v},expression:\"show\"}},[_c('van-cascader',{attrs:{\"title\":\"请选择所在地区\",\"options\":_vm.areasList},on:{\"close\":function($event){_vm.show = false},\"finish\":_vm.onFinish},model:{value:(_vm.cascaderValue),callback:function ($$v) {_vm.cascaderValue=$$v},expression:\"cascaderValue\"}})],1),_c('van-cell-group',[_c('van-field',{attrs:{\"label\":\"详细地址\",\"placeholder\":\"街道门牌、楼层房间等信息\"},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],1)]],2)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <van-nav-bar fixed :title=\"$route.query.mode || '新增收货地址'\" left-arrow @click-left=\"$router.go(-1)\" />\r\n    <div class=\"content\"><br>\r\n\r\n      <van-address-edit\r\n        :show-detail='false'\r\n        :show-set-default ='isShowDefaultss'\r\n        :area-columns-placeholder=\"['请选择', '请选择', '请选择']\"\r\n        :addressInfo=\"addressInfo\"\r\n        v-model=\"addressInfo\"\r\n        :show-delete=\"isDeleted\"\r\n        @save=\"onSave\"\r\n        @delete=\"onDelete\"\r\n        :show-area= false\r\n        >\r\n        <!-- 自定义组件 -->\r\n      <template>\r\n         <van-field\r\n               required\r\n               v-model=\"fieldValue\"\r\n               is-link\r\n               readonly\r\n               label=\"地区\"\r\n               placeholder=\"请选择所在地区\"\r\n               @click=\"show = true\"\r\n               />\r\n            <van-popup v-model=\"show\" round position=\"bottom\">\r\n            <van-cascader\r\n                v-model=\"cascaderValue\"\r\n                title=\"请选择所在地区\"\r\n                :options=\"areasList\"\r\n                @close=\"show = false\"\r\n                @finish=\"onFinish\"\r\n              />\r\n            </van-popup>\r\n           <van-cell-group>\r\n             <van-field v-model=\"value\" label=\"详细地址\" placeholder=\"街道门牌、楼层房间等信息\" />\r\n           </van-cell-group>\r\n\r\n        </template>\r\n      </van-address-edit>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Toast } from 'vant'\r\nimport { setRegions, getRegions } from '@/utils/storage'\r\nimport { addAddressApi, getAddressDetailApi, getRegionsApi, editAddressApi, delAddressApi, getDefaultIdApi, setDefaultIdApi } from '@/api/address'\r\n// import { areaList } from '@vant/area-data'\r\nexport default {\r\n  name: 'newAddress',\r\n  data () {\r\n    return {\r\n      // areaList, // 业务组件默认省市区对象数据\r\n      isDeleted: !!this.$route.query.id,\r\n      isShowDefaultss: true, // 是否展示默认地址栏\r\n      value: '', // 详细地址\r\n      // 自定义存放省市区数据\r\n      areasList: getRegions() || [], // 从本地存储中得到省市区数据\r\n      // region: [],\r\n      show: false,\r\n      fieldValue: '',\r\n      cascaderValue: '',\r\n      region: [],\r\n      // 业务组件数据\r\n      addressInfo: {\r\n        name: '', // 姓名\r\n        tel: '', // 电话号码\r\n        province: '', // 省份\r\n        city: '', // 城市\r\n        county: '', // 区县\r\n        isDefault: false // 是否默认地址\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    name: {\r\n      get () {\r\n        return this.addressInfo.name\r\n      },\r\n      set (value) {\r\n        this.addressInfo.name = value\r\n      }\r\n    },\r\n    phone: {\r\n      get () {\r\n        return this.addressInfo.tel\r\n      },\r\n      set (value) {\r\n        this.addressInfo.tel = value\r\n      }\r\n    },\r\n    detail: {\r\n      get () {\r\n        return this.value\r\n      },\r\n      set (value) {\r\n        this.value = value\r\n      }\r\n    }\r\n\r\n  },\r\n  created () {\r\n    Toast.loading({\r\n      message: '加载中...',\r\n      forbidClick: true,\r\n      loadingType: 'spinner',\r\n      duration: 100\r\n    })\r\n    this.getRegionFn() // 得到省市区\r\n    this.getAddressDetail() // 修改中用的，获取详细地址\r\n  },\r\n  methods: {\r\n    // 全部选项选择完毕后，会触发 finish 事件 将选择省市区的渲染至页面\r\n    onFinish ({ selectedOptions }) {\r\n      this.show = false\r\n      this.fieldValue = selectedOptions.map(option => option.text).join('/')\r\n      // 转换新增地址所需的格式\r\n      this.region = selectedOptions.map(option => {\r\n        return {\r\n          value: option.value,\r\n          label: option.text\r\n        }\r\n      })\r\n    },\r\n    // 获取省市区\r\n    async getRegionFn () {\r\n      // 如果得到就停止调用省市区接口 防止访问超时（数据太多了）\r\n      if (this.areasList.length > 0) return\r\n      const res = await getRegionsApi()\r\n      const { data: { list } } = res\r\n      // 调用转换省市区三级数组对象\r\n      // 将省市区数据存储到本地localstorage中\r\n      setRegions(this.transformData(list))\r\n      this.areasList = getRegions()\r\n    },\r\n\r\n    // 提交数据调用相应接口\r\n    async onSave (e) {\r\n      // 点击保存，让表单中的内容匹配\r\n      this.name = e.name\r\n      this.phone = e.tel\r\n      this.isDefault = e.isDefault\r\n      // 判断是新增还是修改地址，执行不同的函数方法\r\n      if (!this.$route.query.id) {\r\n        Toast.success('新增成功')\r\n        this.newAddressFn()\r\n      } else {\r\n        Toast.success('修改成功')\r\n        this.editAddressFn()\r\n      }\r\n      await this.$sleep(1000)\r\n      this.$router.replace('/myAddress')\r\n    },\r\n    async onDelete () {\r\n      Toast.success('删除成功') // 先让用户看到\r\n      this.delAddressFn() // 再执行增删改\r\n      await this.$sleep(1000) // 再等待1秒，跳转路由才会刷新页面\r\n      this.$router.replace('/myAddress')\r\n    },\r\n\r\n    // 新增地址\r\n    async newAddressFn () {\r\n      // 新增地址此时都没有id，怎么设置默认地址呢\r\n      // if (this.isDefault === false) return\r\n      await addAddressApi(this.name, this.phone, this.region, this.detail)\r\n      // await setDefaultIdApi(this.$route.query.id)\r\n    },\r\n\r\n    // 获取详细地址\r\n    async getAddressDetail () {\r\n      // 判断是否需要获取详细地址\r\n      if (!this.$route.query.id) {\r\n        this.isShowDefaultss = false\r\n        return\r\n      }\r\n      // 判断是否是默认地址\r\n      const { data: { defaultId } } = await getDefaultIdApi()\r\n      const { data: { detail } } = await getAddressDetailApi(this.$route.query.id)\r\n      // 判断是否展示默认地址栏\r\n      if (detail.address_id === defaultId) this.isShowDefaultss = false\r\n      this.name = detail.name\r\n      this.phone = detail.phone\r\n      this.value = detail.detail\r\n      this.fieldValue = Object.values(detail.region).map(item => item).join('/')\r\n    },\r\n    // 修改地址\r\n    async editAddressFn () {\r\n      if (this.isDefault === false) return\r\n      await setDefaultIdApi(this.$route.query.id)\r\n      await editAddressApi(this.$route.query.id, this.name, this.phone, this.region, this.detail)\r\n    },\r\n    // 删除地址\r\n    async delAddressFn () {\r\n      await delAddressApi(this.$route.query.id)\r\n    },\r\n    // 将获取的省市区弄成三级数组对象形式\r\n    transformData (data) {\r\n      const result = []\r\n      for (const key in data) { // 遍历出数据中的每一项\r\n        const cityData = data[key] // children[{},{}]\r\n        const provinceItem = {\r\n          text: data[key].name,\r\n          value: data[key].id,\r\n          children: []\r\n        } // {},{},{}\r\n\r\n        for (const cityKey in cityData.city) { // 继续遍历每个{}的数据\r\n          const regionData = cityData.city[cityKey] // 遍历每个子数组对象中city名\r\n          const cityItem = {\r\n            text: cityData.city[cityKey].name,\r\n            value: cityData.city[cityKey].id,\r\n            children: []\r\n          }\r\n\r\n          for (const regionKey in regionData.region) {\r\n            const regionItem = {\r\n              text: regionData.region[regionKey].name, // 遍历每个孙数组对象中region名\r\n              value: regionData.region[regionKey].id\r\n            }\r\n            cityItem.children.push(regionItem) // 注意先后顺序，孙先push\r\n          }\r\n          provinceItem.children.push(cityItem) // 再子pusn\r\n        }\r\n        result.push(provinceItem) // 最后父push\r\n      }\r\n\r\n      // console.log(result)\r\n      return result\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.content {\r\n  padding-top: 46px;\r\n  padding-bottom: 100px;\r\n  background-color: #f5f5f5;\r\n  min-height: 100vh;\r\n}\r\n</style>\r\n   <!-- const provincesId = Object.keys(list) // []\r\n      const provinces = Object.values(list).map(item => item.name) // []\r\n      console.log(res)\r\n      // 将两个数组的值转化为对象的属性名(数组1的值)：属性值(数组2的值)\r\n      for (let i = 0; i < provincesId.length; i++) {\r\n        const key = provincesId[i]\r\n        const value = provinces[i]\r\n        this.province_list[key] = value\r\n      } -->\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./newAddress.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./newAddress.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./newAddress.vue?vue&type=template&id=50286548&scoped=true&\"\nimport script from \"./newAddress.vue?vue&type=script&lang=js&\"\nexport * from \"./newAddress.vue?vue&type=script&lang=js&\"\nimport style0 from \"./newAddress.vue?vue&type=style&index=0&id=50286548&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"50286548\",\n  null\n  \n)\n\nexport default component.exports","import request from '@/utils/request'\r\n\r\n// 获取收货地址列表\r\nexport const getAddressApi = () => {\r\n  return request.get('/address/list')\r\n}\r\n// 获取收货地址详情\r\nexport const getAddressDetailApi = (addressId) => {\r\n  return request.get('/address/detail', {\r\n    params: {\r\n      addressId\r\n    }\r\n  })\r\n}\r\n// 添加收货地址\r\nexport const addAddressApi = (name, phone, region, detail) => {\r\n  return request.post('/address/add', {\r\n    form: {\r\n      name, // 收货人姓名\r\n      phone, // 收货人电话\r\n      region, // 数组[ {\"value\":107,\";abel\":\"上海\"}]\r\n      detail\r\n    }\r\n  })\r\n}\r\n\r\n// 修改收货地址\r\nexport const editAddressApi = (addressId, name, phone, region, detail) => {\r\n  return request.post('/address/edit', {\r\n    addressId,\r\n    form: {\r\n      name, // 收货人姓名\r\n      phone, // 收货人电话\r\n      region, // 数组[ {\"value\":107,\";abel\":\"上海\"}]\r\n      detail\r\n    }\r\n  })\r\n}\r\n// 删除收货地址\r\nexport const delAddressApi = (addressId) => {\r\n  return request.post('/address/remove', {\r\n    addressId\r\n  })\r\n}\r\n\r\n// 获取省市区\r\nexport const getRegionsApi = () => {\r\n  return request.get('/region/tree')\r\n}\r\n\r\n// 设置默认地址ID\r\nexport const setDefaultIdApi = (addressId) => {\r\n  return request.post('/address/setDefault', { addressId })\r\n}\r\n\r\n// 获取默认地址ID\r\nexport const getDefaultIdApi = () => {\r\n  return request.get('/address/defaultId')\r\n}\r\n"],"names":["render","_vm","this","_c","_self","attrs","$route","query","mode","on","$event","$router","go","staticClass","isShowDefaultss","addressInfo","isDeleted","onSave","onDelete","model","value","callback","$$v","expression","show","fieldValue","areasList","onFinish","cascaderValue","staticRenderFns","name","data","id","getRegions","region","tel","province","city","county","isDefault","computed","get","set","phone","detail","created","_Toast","loading","message","forbidClick","loadingType","duration","getRegionFn","getAddressDetail","methods","selectedOptions","map","option","text","join","label","length","res","getRegionsApi","list","setRegions","transformData","e","success","editAddressFn","newAddressFn","$sleep","replace","delAddressFn","addAddressApi","defaultId","getDefaultIdApi","getAddressDetailApi","address_id","Object","values","item","setDefaultIdApi","editAddressApi","delAddressApi","result","key","cityData","provinceItem","children","cityKey","regionData","cityItem","regionKey","regionItem","push","component","getAddressApi","request","addressId","params","post","form"],"sourceRoot":""}